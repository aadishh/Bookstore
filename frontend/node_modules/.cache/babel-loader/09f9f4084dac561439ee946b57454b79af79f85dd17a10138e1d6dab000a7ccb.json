{"ast":null,"code":"import React,{useContext,createContext,useState}from\"react\";import{jsx as _jsx}from\"react/jsx-runtime\";// STEP 1: Create Context\nconst GlobalContext=/*#__PURE__*/createContext();// STEP 2: Create Provider Component\nconst GlobalContextProvider=props=>{const[showCustomToast,setShowCustomToast]=useState(props.showCustomToast);const[updateCustomToast,setUpdateCustomToast]=useState(props.updateCustomToast);const[showToast,setShowToast]=useState(false);const[toastType,setToastType]=useState(props.toastType);const[toastText,setToastText]=useState(props.toastText);const hideToast=()=>{setShowToast(false);};const updateToast=(_toastType,toastText)=>{setShowCustomToast(true);setToastType(_toastType);setToastText(toastText);};return/*#__PURE__*/_jsx(GlobalContext.Provider,{value:{updateCustomToast:updateToast,showCustomToast,toastType,toastText,hideToast,setShowCustomToast,setUpdateCustomToast,setShowToast},children:props.children});};// STEP 3: Hook to use Context\nconst useGlobalContext=()=>{const context=useContext(GlobalContext);if(context===undefined){throw new Error(\"useGlobalContext must be used within a GlobalContextProvider\");}return context;};// PropTypes for validation\n// Export the provider and hook\nexport{useGlobalContext,GlobalContextProvider};","map":{"version":3,"names":["React","useContext","createContext","useState","jsx","_jsx","GlobalContext","GlobalContextProvider","props","showCustomToast","setShowCustomToast","updateCustomToast","setUpdateCustomToast","showToast","setShowToast","toastType","setToastType","toastText","setToastText","hideToast","updateToast","_toastType","Provider","value","children","useGlobalContext","context","undefined","Error"],"sources":["/Users/adishbhat/Documents/Projects/BookStore/frontend/src/context/GlobalContext.jsx"],"sourcesContent":["import React, { useContext, createContext, useState } from \"react\";\nimport PropTypes from \"prop-types\";\n\n// STEP 1: Create Context\nconst GlobalContext = createContext();\n\n// STEP 2: Create Provider Component\nconst GlobalContextProvider = (props) => {\n  const [showCustomToast, setShowCustomToast] = useState(props.showCustomToast);\n  const [updateCustomToast, setUpdateCustomToast] = useState(props.updateCustomToast);\n  const [showToast, setShowToast] = useState(false);\n  const [toastType, setToastType] = useState(props.toastType);\n  const [toastText, setToastText] = useState(props.toastText);\n\n  const hideToast = () => {\n    setShowToast(false);\n  };\n\n  const updateToast = (_toastType, toastText) => {\n    setShowCustomToast(true);\n    setToastType(_toastType);\n    setToastText(toastText);\n  };\n\n  return (\n    <GlobalContext.Provider\n      value={{\n        updateCustomToast: updateToast,\n        showCustomToast,\n        toastType,\n        toastText,\n        hideToast,\n        setShowCustomToast,\n        setUpdateCustomToast,\n        setShowToast,\n      }}\n    >\n      {props.children}\n    </GlobalContext.Provider>\n  );\n};\n\n// STEP 3: Hook to use Context\nconst useGlobalContext = () => {\n  const context = useContext(GlobalContext);\n  if (context === undefined) {\n    throw new Error(\"useGlobalContext must be used within a GlobalContextProvider\");\n  }\n  return context;\n};\n\n// PropTypes for validation\nGlobalContextProvider.propTypes = {\n  updateCustomToast: PropTypes.func.isRequired,\n  showCustomToast: PropTypes.bool.isRequired,\n  toastType: PropTypes.oneOf([\"success\", \"error\", \"info\"]).isRequired,\n  toastText: PropTypes.string.isRequired,\n  children: PropTypes.node.isRequired,\n};\n\n// Export the provider and hook\nexport { useGlobalContext, GlobalContextProvider };\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,UAAU,CAAEC,aAAa,CAAEC,QAAQ,KAAQ,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAGnE;AACA,KAAM,CAAAC,aAAa,cAAGJ,aAAa,CAAC,CAAC,CAErC;AACA,KAAM,CAAAK,qBAAqB,CAAIC,KAAK,EAAK,CACvC,KAAM,CAACC,eAAe,CAAEC,kBAAkB,CAAC,CAAGP,QAAQ,CAACK,KAAK,CAACC,eAAe,CAAC,CAC7E,KAAM,CAACE,iBAAiB,CAAEC,oBAAoB,CAAC,CAAGT,QAAQ,CAACK,KAAK,CAACG,iBAAiB,CAAC,CACnF,KAAM,CAACE,SAAS,CAAEC,YAAY,CAAC,CAAGX,QAAQ,CAAC,KAAK,CAAC,CACjD,KAAM,CAACY,SAAS,CAAEC,YAAY,CAAC,CAAGb,QAAQ,CAACK,KAAK,CAACO,SAAS,CAAC,CAC3D,KAAM,CAACE,SAAS,CAAEC,YAAY,CAAC,CAAGf,QAAQ,CAACK,KAAK,CAACS,SAAS,CAAC,CAE3D,KAAM,CAAAE,SAAS,CAAGA,CAAA,GAAM,CACtBL,YAAY,CAAC,KAAK,CAAC,CACrB,CAAC,CAED,KAAM,CAAAM,WAAW,CAAGA,CAACC,UAAU,CAAEJ,SAAS,GAAK,CAC7CP,kBAAkB,CAAC,IAAI,CAAC,CACxBM,YAAY,CAACK,UAAU,CAAC,CACxBH,YAAY,CAACD,SAAS,CAAC,CACzB,CAAC,CAED,mBACEZ,IAAA,CAACC,aAAa,CAACgB,QAAQ,EACrBC,KAAK,CAAE,CACLZ,iBAAiB,CAAES,WAAW,CAC9BX,eAAe,CACfM,SAAS,CACTE,SAAS,CACTE,SAAS,CACTT,kBAAkB,CAClBE,oBAAoB,CACpBE,YACF,CAAE,CAAAU,QAAA,CAEDhB,KAAK,CAACgB,QAAQ,CACO,CAAC,CAE7B,CAAC,CAED;AACA,KAAM,CAAAC,gBAAgB,CAAGA,CAAA,GAAM,CAC7B,KAAM,CAAAC,OAAO,CAAGzB,UAAU,CAACK,aAAa,CAAC,CACzC,GAAIoB,OAAO,GAAKC,SAAS,CAAE,CACzB,KAAM,IAAI,CAAAC,KAAK,CAAC,8DAA8D,CAAC,CACjF,CACA,MAAO,CAAAF,OAAO,CAChB,CAAC,CAED;AASA;AACA,OAASD,gBAAgB,CAAElB,qBAAqB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}