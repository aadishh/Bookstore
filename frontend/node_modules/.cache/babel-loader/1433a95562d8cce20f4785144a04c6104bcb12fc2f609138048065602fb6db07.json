{"ast":null,"code":"var _jsxFileName = \"/Users/adishbhat/Documents/Projects/BookStore/frontend/src/context/GlobalContext.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useContext, createContext, useState } from \"react\";\nimport PropTypes from \"prop-types\";\n\n// STEP 1: Create Context\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GlobalContext = /*#__PURE__*/createContext();\n\n// STEP 2: Create Provider Component\nconst GlobalContextProvider = props => {\n  _s();\n  const [showCustomToast, setShowCustomToast] = useState(props.showCustomToast);\n  const [updateCustomToast, setUpdateCustomToast] = useState(props.updateCustomToast);\n  const [showToast, setShowToast] = useState(false);\n  const [toastType, setToastType] = useState(props.toastType);\n  const [toastText, setToastText] = useState(props.toastText);\n  const hideToast = () => {\n    setShowToast(false);\n  };\n  const updateToast = (_toastType, toastText) => {\n    setShowCustomToast(true);\n    setToastType(_toastType);\n    setToastText(toastText);\n  };\n  console.log(\"sdsadasa\", showCustomToast);\n  return /*#__PURE__*/_jsxDEV(GlobalContext.Provider, {\n    value: {\n      updateCustomToast: updateToast,\n      showCustomToast,\n      toastType,\n      toastText,\n      hideToast,\n      setShowCustomToast,\n      setUpdateCustomToast,\n      setShowToast\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n\n// STEP 3: Hook to use Context\n_s(GlobalContextProvider, \"wiYgC82VsBMwfV69g58zawYYTmw=\");\n_c = GlobalContextProvider;\nconst useGlobalContext = () => {\n  _s2();\n  const context = useContext(GlobalContext);\n  if (context === undefined) {\n    throw new Error(\"useGlobalContext must be used within a GlobalContextProvider\");\n  }\n  return context;\n};\n\n// PropTypes for validation\n_s2(useGlobalContext, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nGlobalContextProvider.propTypes = {\n  updateCustomToast: PropTypes.func.isRequired,\n  showCustomToast: PropTypes.bool.isRequired,\n  toastType: PropTypes.oneOf([\"success\", \"error\", \"info\"]).isRequired,\n  toastText: PropTypes.string.isRequired,\n  children: PropTypes.node.isRequired\n};\n\n// Export the provider and hook\nexport { useGlobalContext, GlobalContextProvider };\nvar _c;\n$RefreshReg$(_c, \"GlobalContextProvider\");","map":{"version":3,"names":["React","useContext","createContext","useState","PropTypes","jsxDEV","_jsxDEV","GlobalContext","GlobalContextProvider","props","_s","showCustomToast","setShowCustomToast","updateCustomToast","setUpdateCustomToast","showToast","setShowToast","toastType","setToastType","toastText","setToastText","hideToast","updateToast","_toastType","console","log","Provider","value","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","useGlobalContext","_s2","context","undefined","Error","propTypes","func","isRequired","bool","oneOf","string","node","$RefreshReg$"],"sources":["/Users/adishbhat/Documents/Projects/BookStore/frontend/src/context/GlobalContext.jsx"],"sourcesContent":["import React, { useContext, createContext, useState } from \"react\";\nimport PropTypes from \"prop-types\";\n\n// STEP 1: Create Context\nconst GlobalContext = createContext();\n\n// STEP 2: Create Provider Component\nconst GlobalContextProvider = (props) => {\n  const [showCustomToast, setShowCustomToast] = useState(props.showCustomToast);\n  const [updateCustomToast, setUpdateCustomToast] = useState(props.updateCustomToast);\n  const [showToast, setShowToast] = useState(false);\n  const [toastType, setToastType] = useState(props.toastType);\n  const [toastText, setToastText] = useState(props.toastText);\n\n  const hideToast = () => {\n    setShowToast(false);\n  };\n\n  const updateToast = (_toastType, toastText) => {\n    setShowCustomToast(true);\n    setToastType(_toastType);\n    setToastText(toastText);\n  };\n\n  console.log(\"sdsadasa\",showCustomToast)\n  return (\n    <GlobalContext.Provider\n      value={{\n        updateCustomToast: updateToast,\n        showCustomToast,\n        toastType,\n        toastText,\n        hideToast,\n        setShowCustomToast,\n        setUpdateCustomToast,\n        setShowToast,\n      }}\n    >\n      {props.children}\n    </GlobalContext.Provider>\n  );\n};\n\n// STEP 3: Hook to use Context\nconst useGlobalContext = () => {\n  const context = useContext(GlobalContext);\n  if (context === undefined) {\n    throw new Error(\"useGlobalContext must be used within a GlobalContextProvider\");\n  }\n  return context;\n};\n\n// PropTypes for validation\nGlobalContextProvider.propTypes = {\n  updateCustomToast: PropTypes.func.isRequired,\n  showCustomToast: PropTypes.bool.isRequired,\n  toastType: PropTypes.oneOf([\"success\", \"error\", \"info\"]).isRequired,\n  toastText: PropTypes.string.isRequired,\n  children: PropTypes.node.isRequired,\n};\n\n// Export the provider and hook\nexport { useGlobalContext, GlobalContextProvider };\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,UAAU,EAAEC,aAAa,EAAEC,QAAQ,QAAQ,OAAO;AAClE,OAAOC,SAAS,MAAM,YAAY;;AAElC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,aAAa,gBAAGL,aAAa,CAAC,CAAC;;AAErC;AACA,MAAMM,qBAAqB,GAAIC,KAAK,IAAK;EAAAC,EAAA;EACvC,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGT,QAAQ,CAACM,KAAK,CAACE,eAAe,CAAC;EAC7E,MAAM,CAACE,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGX,QAAQ,CAACM,KAAK,CAACI,iBAAiB,CAAC;EACnF,MAAM,CAACE,SAAS,EAAEC,YAAY,CAAC,GAAGb,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACc,SAAS,EAAEC,YAAY,CAAC,GAAGf,QAAQ,CAACM,KAAK,CAACQ,SAAS,CAAC;EAC3D,MAAM,CAACE,SAAS,EAAEC,YAAY,CAAC,GAAGjB,QAAQ,CAACM,KAAK,CAACU,SAAS,CAAC;EAE3D,MAAME,SAAS,GAAGA,CAAA,KAAM;IACtBL,YAAY,CAAC,KAAK,CAAC;EACrB,CAAC;EAED,MAAMM,WAAW,GAAGA,CAACC,UAAU,EAAEJ,SAAS,KAAK;IAC7CP,kBAAkB,CAAC,IAAI,CAAC;IACxBM,YAAY,CAACK,UAAU,CAAC;IACxBH,YAAY,CAACD,SAAS,CAAC;EACzB,CAAC;EAEDK,OAAO,CAACC,GAAG,CAAC,UAAU,EAACd,eAAe,CAAC;EACvC,oBACEL,OAAA,CAACC,aAAa,CAACmB,QAAQ;IACrBC,KAAK,EAAE;MACLd,iBAAiB,EAAES,WAAW;MAC9BX,eAAe;MACfM,SAAS;MACTE,SAAS;MACTE,SAAS;MACTT,kBAAkB;MAClBE,oBAAoB;MACpBE;IACF,CAAE;IAAAY,QAAA,EAEDnB,KAAK,CAACmB;EAAQ;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACO,CAAC;AAE7B,CAAC;;AAED;AAAAtB,EAAA,CApCMF,qBAAqB;AAAAyB,EAAA,GAArBzB,qBAAqB;AAqC3B,MAAM0B,gBAAgB,GAAGA,CAAA,KAAM;EAAAC,GAAA;EAC7B,MAAMC,OAAO,GAAGnC,UAAU,CAACM,aAAa,CAAC;EACzC,IAAI6B,OAAO,KAAKC,SAAS,EAAE;IACzB,MAAM,IAAIC,KAAK,CAAC,8DAA8D,CAAC;EACjF;EACA,OAAOF,OAAO;AAChB,CAAC;;AAED;AAAAD,GAAA,CARMD,gBAAgB;AAStB1B,qBAAqB,CAAC+B,SAAS,GAAG;EAChC1B,iBAAiB,EAAET,SAAS,CAACoC,IAAI,CAACC,UAAU;EAC5C9B,eAAe,EAAEP,SAAS,CAACsC,IAAI,CAACD,UAAU;EAC1CxB,SAAS,EAAEb,SAAS,CAACuC,KAAK,CAAC,CAAC,SAAS,EAAE,OAAO,EAAE,MAAM,CAAC,CAAC,CAACF,UAAU;EACnEtB,SAAS,EAAEf,SAAS,CAACwC,MAAM,CAACH,UAAU;EACtCb,QAAQ,EAAExB,SAAS,CAACyC,IAAI,CAACJ;AAC3B,CAAC;;AAED;AACA,SAASP,gBAAgB,EAAE1B,qBAAqB;AAAG,IAAAyB,EAAA;AAAAa,YAAA,CAAAb,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}