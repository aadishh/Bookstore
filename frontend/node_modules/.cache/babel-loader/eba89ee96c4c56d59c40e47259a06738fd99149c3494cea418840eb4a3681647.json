{"ast":null,"code":"var _jsxFileName = \"/Users/adishbhat/Documents/Projects/BookStore/frontend/src/components/Dropdowns/DropdownSingleSelect.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from \"react\";\nimport PropTypes, { object } from \"prop-types\";\nimport CustomImage from \"../CustomImage\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DropdownSingleSelect = ({\n  data,\n  onClick\n}) => {\n  _s();\n  const [isOpen, setIsOpen] = useState(false);\n  const dropdownRef = useRef();\n  const handleToggle = () => {\n    setIsOpen(!isOpen);\n  };\n  const handleClickOutside = event => {\n    if (dropdownRef.current && !dropdownRef.current.contains(event.target)) {\n      setIsOpen(false);\n    }\n  };\n  useEffect(() => {\n    document.addEventListener(\"mousedown\", handleClickOutside);\n    return () => document.removeEventListener(\"mousedown\", handleClickOutside);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"relative\",\n    ref: dropdownRef,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-auto gap-2 px-2 bg-white py-1 items-center border-indigo border flex flex-row cursor-pointer\",\n      onClick: handleToggle,\n      children: [placeHolder, /*#__PURE__*/_jsxDEV(\"svg\", {\n        className: \"w-4 h-4 text-gray-600\",\n        fill: \"none\",\n        stroke: \"currentColor\",\n        viewBox: \"0 0 24 24\",\n        xmlns: \"http://www.w3.org/2000/svg\",\n        children: /*#__PURE__*/_jsxDEV(\"path\", {\n          strokeLinecap: \"round\",\n          strokeLinejoin: \"round\",\n          strokeWidth: 2,\n          d: \"M19 9l-7 7-7-7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), isOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"absolute right-0 mt-2 w-32 bg-white border rounded shadow z-10\",\n      children: data.map((item, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          setIsOpen(false);\n          onClick(item);\n        },\n        className: \"block w-full px-4 py-2 text-left text-sm hover:bg-gray-100\",\n        children: item.name\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n_s(DropdownSingleSelect, \"uhOyve9TWk+bvhPJTPlaMsUEQAY=\");\n_c = DropdownSingleSelect;\nDropdownSingleSelect.propTypes = {\n  data: PropTypes.arrayOf(object).isRequired,\n  onClick: PropTypes.func,\n  placeHolder: PropTypes.string\n};\nexport default DropdownSingleSelect;\nvar _c;\n$RefreshReg$(_c, \"DropdownSingleSelect\");","map":{"version":3,"names":["React","useEffect","useRef","useState","PropTypes","object","CustomImage","jsxDEV","_jsxDEV","DropdownSingleSelect","data","onClick","_s","isOpen","setIsOpen","dropdownRef","handleToggle","handleClickOutside","event","current","contains","target","document","addEventListener","removeEventListener","className","ref","children","placeHolder","fill","stroke","viewBox","xmlns","strokeLinecap","strokeLinejoin","strokeWidth","d","fileName","_jsxFileName","lineNumber","columnNumber","map","item","index","name","_c","propTypes","arrayOf","isRequired","func","string","$RefreshReg$"],"sources":["/Users/adishbhat/Documents/Projects/BookStore/frontend/src/components/Dropdowns/DropdownSingleSelect.jsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\nimport PropTypes, { object } from \"prop-types\";\nimport CustomImage from \"../CustomImage\";\n\nconst DropdownSingleSelect = ({ data, onClick }) => {\n  const [isOpen, setIsOpen] = useState(false);\n  const dropdownRef = useRef();\n\n  const handleToggle = () => {\n    setIsOpen(!isOpen);\n  };\n\n  const handleClickOutside = (event) => {\n    if (dropdownRef.current && !dropdownRef.current.contains(event.target)) {\n      setIsOpen(false);\n    }\n  };\n\n  useEffect(() => {\n    document.addEventListener(\"mousedown\", handleClickOutside);\n    return () => document.removeEventListener(\"mousedown\", handleClickOutside);\n  }, []);\n\n  return (\n    <div className=\"relative\" ref={dropdownRef}>\n      <div\n        className=\"w-auto gap-2 px-2 bg-white py-1 items-center border-indigo border flex flex-row cursor-pointer\"\n        onClick={handleToggle}\n      >\n        {placeHolder}\n\n        <svg\n          className=\"w-4 h-4 text-gray-600\"\n          fill=\"none\"\n          stroke=\"currentColor\"\n          viewBox=\"0 0 24 24\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n        >\n          <path\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth={2}\n            d=\"M19 9l-7 7-7-7\"\n          />\n        </svg>\n      </div>\n\n      {isOpen && (\n        <div className=\"absolute right-0 mt-2 w-32 bg-white border rounded shadow z-10\">\n          {data.map((item, index) => (\n            <button\n              key={index}\n              onClick={() => {\n                setIsOpen(false);\n                onClick(item);\n              }}\n              className=\"block w-full px-4 py-2 text-left text-sm hover:bg-gray-100\"\n            >\n              {item.name}\n            </button>\n          ))}\n        </div>\n      )}\n    </div>\n  );\n};\n\nDropdownSingleSelect.propTypes = {\n  data: PropTypes.arrayOf(object).isRequired,\n  onClick: PropTypes.func,\n  placeHolder: PropTypes.string,\n};\n\nexport default DropdownSingleSelect;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}