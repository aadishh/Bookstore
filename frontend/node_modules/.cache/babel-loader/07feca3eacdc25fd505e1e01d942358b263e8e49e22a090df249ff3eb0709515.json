{"ast":null,"code":"import{useContext,createContext,useState}from\"react\";import{jsx as _jsx}from\"react/jsx-runtime\";const AuthContext=/*#__PURE__*/createContext();const AuthProvider=props=>{const[userData,setUserData]=useState(props.userData);return/*#__PURE__*/_jsx(AuthContext.Provider,{value:{userData,setUserData},children:props.children});};const useAuth=()=>{const context=useContext(AuthContext);if(!context){throw new Error(\"useAuth must be used within a AuthProvider\");}return context;};export{useAuth,AuthProvider};","map":{"version":3,"names":["useContext","createContext","useState","jsx","_jsx","AuthContext","AuthProvider","props","userData","setUserData","Provider","value","children","useAuth","context","Error"],"sources":["/Users/adishbhat/Documents/Projects/BookStore/frontend/src/context/AuthContext.jsx"],"sourcesContent":["import { useContext, createContext, useState } from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst AuthContext = createContext();\n\nconst AuthProvider = (props) => {\n  const [userData, setUserData] = useState(props.userData);\n\n  return (\n    <AuthContext.Provider value={{ userData, setUserData }}>\n      {props.children}\n    </AuthContext.Provider>\n  );\n};\n\nconst useAuth = () => {\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error(\"useAuth must be used within a AuthProvider\");\n  }\n  return context;\n};\n\nAuthProvider.propTypes = {\n  children: PropTypes.node.isRequired,\n  setUserData: PropTypes.string,\n  userData: PropTypes.string,\n};\n\nexport { useAuth, AuthProvider };\n"],"mappings":"AAAA,OAASA,UAAU,CAAEC,aAAa,CAAEC,QAAQ,KAAQ,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAG5D,KAAM,CAAAC,WAAW,cAAGJ,aAAa,CAAC,CAAC,CAEnC,KAAM,CAAAK,YAAY,CAAIC,KAAK,EAAK,CAC9B,KAAM,CAACC,QAAQ,CAAEC,WAAW,CAAC,CAAGP,QAAQ,CAACK,KAAK,CAACC,QAAQ,CAAC,CAExD,mBACEJ,IAAA,CAACC,WAAW,CAACK,QAAQ,EAACC,KAAK,CAAE,CAAEH,QAAQ,CAAEC,WAAY,CAAE,CAAAG,QAAA,CACpDL,KAAK,CAACK,QAAQ,CACK,CAAC,CAE3B,CAAC,CAED,KAAM,CAAAC,OAAO,CAAGA,CAAA,GAAM,CACpB,KAAM,CAAAC,OAAO,CAAGd,UAAU,CAACK,WAAW,CAAC,CACvC,GAAI,CAACS,OAAO,CAAE,CACZ,KAAM,IAAI,CAAAC,KAAK,CAAC,4CAA4C,CAAC,CAC/D,CACA,MAAO,CAAAD,OAAO,CAChB,CAAC,CAQD,OAASD,OAAO,CAAEP,YAAY","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}